<% layout('layout') -%>

    <script src="js/socket.io.js"></script>
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCp5FCefvQbDVIoiuvnlEBRXm7jjEHUKSM&callback=initMap">
    </script>

    <script type="text/javascript">
        document.getElementById("graphtag").className = "active";
        //------
        // Check if have req.query
        <% if(qs.id){ %>
        var globalvar = 1;
        <% }else { %>
        var globalvar = 0;
        <% } %>
        var socket = io();
        var data_id = null;
        // create Node options
        function initfunction(node) {
            console.log(node.length);
            var select = document.getElementById("sources");
            for (var i = 0, l = node.length; i < l; i++) {
                var option = node[i];
                var el = document.createElement("option");
                el.textContent = option;
                el.value = option;
                select.appendChild(el);
            }
            <% if(qs.id){ %>
            $('#sources').val("<%=qs.id%>");
            <% } %>
        }

        //Create date options



        window.onload = function() {
            //TODO: optimize this code
            var user = checkLogin();
            console.log('this is the get user function result',user);
            if (user) {
              var yourUl1 = document.getElementById("editbutton1");
              yourUl1.style.display = yourUl1.style.display === 'none' ? '' : 'none';
              var yourUl2 = document.getElementById("editbutton2");
              yourUl2.style.display = yourUl2.style.display === 'none' ? '' : 'none';

            }
            //-- create options
            var NodeID = [];
            var lat = [];
            var lng = [];
            var nodeid = [];
            var phone = [];
            var Nodeinfo;
            $.ajax({
                type: "GET",
                url: "/node/getinfo?list=1&status=1", // <-- Here
                dataType: "json",
                success: function(data) {
                    myVariable = data;
                    count = Object.keys(myVariable).length;
                    // console.log(count);
                    for (var i = 0; i < count; i++) {
                        NodeID.push(Number(myVariable[i].node_id));
                    }
                    initfunction(NodeID);
                    // console.log(NodeID);
                }
            });
            //---------------------------------------
            var count;
            var co = [];
            var dust = [];
            var gas = [];
            var temp = [];
            var xaxis = [];
            var bat = [];
            var node_id = null;
            if (globalvar == 1) {
                node_id = <%=qs.id%>;
                console.log('this is node id', node_id);
                globalvar = 0;
                display();
            }
            $("#sources").on("change", function() {
                var e = document.getElementById("sources");
                node_id = e.options[e.selectedIndex].value;
                document.getElementById("chooseNode").value = node_id;
                var myVariable, Nodeinfo;
                count;
                co = [];
                dust = [];
                gas = [];
                temp = [];
                xaxis = [];
                bat = [];
                var lat = [];
                var lng = [];
                var nodeid = [];
                var phone = [];
                display();


            });


            function drowchart(xaxis, co, dust, gas, temp, bat) {
                // alert(xaxis);
                $(function() {
                    $('#chart').highcharts({
                        title: {
                            text: 'Node: ' + node_id,
                            x: -20 //center
                        },
                        subtitle: {
                            text: '',
                            x: -20
                        },
                        xAxis: {
                            categories: xaxis
                        },
                        yAxis: {
                            title: {
                                text: 'Value'
                            },
                            plotLines: [{
                                value: 0,
                                width: 1,
                                color: '#808080'
                            }]
                        },
                        tooltip: {
                            // valueSuffix: '°C'
                        },
                        legend: {
                            layout: 'vertical',
                            align: 'right',
                            verticalAlign: 'middle',
                            borderWidth: 0
                        },
                        series: [{
                            name: 'CO(ppm)',
                            data: co
                        }, {
                            name: 'TEMP(°C)',
                            data: temp
                        }, {
                            name: 'DUST(ppm)',
                            data: dust
                        }, {
                            name: 'GAS(ppm)',
                            data: gas
                        }, {
                            name: 'BATTERY(%)',
                            data: bat
                        }]
                    });
                });
            }

            function removeOptions(selectbox) {
                var i;
                for (i = selectbox.options.length - 1; i >= 0; i--) {
                    selectbox.remove(i);
                }
            }

            function createDateOptions(date, co, dust, temp, gas, bat, xaxis) {
                var select = document.getElementById("date");
                var length = xaxis.length;
                console.log(length);
                for (var i = date.length - 1; i >= 0; i--) {
                    var option = date[i];
                    var wtemp = String(option);
                    var wtemp1 = wtemp.substring(0, 16);
                    var el = document.createElement("option");
                    el.textContent = wtemp1;
                    el.value = option;
                    select.appendChild(el);
                    // console.log(temp.substring(0,16));
                }
                var ngay = xaxis[length - 1].getDate();
                var thang = xaxis[length - 1].getMonth();
                var co1 = [];
                var dust1 = [];
                var temp1 = [];
                var gas1 = [];
                var bat1 = [];
                var x = [];
                for (var i = 0; i < xaxis.length; i++) {
                    if (xaxis[i].getDate() == ngay && xaxis[i].getMonth() == thang) {
                        co1.push(co[i]);
                        dust1.push(dust[i]);
                        temp1.push(temp[i]);
                        gas1.push(gas[i]);
                        bat1.push(bat[i]);
                        x.push(xaxis[i]);
                    }
                }
                var x1 = [];
                for (var t = 0; t < x.length; t++) {
                    x1.push(x[t].getHours() + ":" + x[t].getMinutes() + ":" + x[t].getSeconds());
                }
                console.log(x1);
                drowchart(x1, co1, dust1, gas1, temp1, bat1);
                                socket.off('rdata');
                socket.on('rdata', function(updateData) {
                    console.log(data_id, '==', updateData.new_val.data_id);
                    if (data_id === updateData.new_val.data_id) {
                        console.log('get data', updateData.new_val.data);
                        co1.push(Number(updateData.new_val.data.co));
                        dust1.push(Number(updateData.new_val.data.dust));
                        temp1.push(Number(updateData.new_val.data.temp));
                        gas1.push(Number(updateData.new_val.data.gas));
                        bat1.push(Number(updateData.new_val.data.bat));
                        x.push(updateData.new_val.time);
                        drowchart(x, co1, dust1, gas1, temp1, bat1);
                    }
                });
            }

            $("#date").on("change", function() {
                var e = document.getElementById("date");
                date = e.options[e.selectedIndex].value;
                var i = 0;
                var j;
                var long = xaxis.length;
                for (var t = 0; t < long; t++) {
                    if (xaxis[t] == date) {
                        j = t;
                        break;
                    }
                }
                var ngay = xaxis[j].getDate();
                var thang = xaxis[j].getMonth();
                var co1 = [];
                var dust1 = [];
                var temp1 = [];
                var gas1 = [];
                var bat1 = [];
                var x = [];
                for (z = j; z < long; z++) {
                    if (z == j) {
                        co1.push(co[z]);
                        dust1.push(dust[z]);
                        temp1.push(temp[z]);
                        gas1.push(gas[z]);
                        bat1.push(bat[z]);
                        x.push(xaxis[z]);
                    } else {
                        if (xaxis[z].getDate() == ngay && xaxis[z].getMonth() == thang) {
                            co1.push(co[z]);
                            dust1.push(dust[z]);
                            temp1.push(temp[z]);
                            gas1.push(gas[z]);
                            bat1.push(bat[z]);
                            x.push(xaxis[z]);
                        }
                    }

                }
                var x1 = [];
                for (var t = 0; t < x.length; t++) {
                    x1.push(x[t].getHours() + ":" + x[t].getMinutes() + ":" + x[t].getSeconds());
                }

                // Drow new chart
                drowchart(x1, co1, dust1, gas1, temp1, bat1);
                                socket.off('rdata');
                socket.on('rdata', function(updateData) {
                    console.log(data_id, '==', updateData.new_val.data_id);
                    if (data_id === updateData.new_val.data_id) {
                        console.log('get data', updateData.new_val.data);
                        co1.push(Number(updateData.new_val.data.co));
                        dust1.push(Number(updateData.new_val.data.dust));
                        temp1.push(Number(updateData.new_val.data.temp));
                        gas1.push(Number(updateData.new_val.data.gas));
                        bat1.push(Number(updateData.new_val.data.bat));
                        x.push(updateData.new_val.time);
                        drowchart(x, co1, dust1, gas1, temp1, bat1);
                    }
                });

            });

            function display() {
                // Get node data
                $.ajax({
                    type: "GET",
                    url: "/node/getdata?id=" + node_id,
                    dataType: "json",
                    success: function(data) {
                        myVariable = data;
                        count = Object.keys(myVariable).length;
                        // console.log(count);
                        data_id = myVariable[0].data_id;
                        console.log('this is dataid', myVariable[0].data_id);
                        for (var i = 0; i < count; i++) {
                            co.push(Number(myVariable[i].data.co));
                            dust.push(Number(myVariable[i].data.dust));
                            temp.push(Number(myVariable[i].data.temp));
                            gas.push(Number(myVariable[i].data.gas));
                            bat.push(Number(myVariable[i].data.bat));
                            var d = new Date(myVariable[i].time);
                            xaxis.push(d);
                        }
                        var lastdate = String(xaxis[count - 1]).substring(0, 25);
                        console.log(lastdate);

                        document.getElementById("update").innerHTML = '<span style="font-weight:bold">' + "DATE: " + '</span>' + lastdate + '<hr/>' +
                            '<span style="font-weight:bold;">CO: </span>' + co[count - 1] + 'ppm' + '<span style="padding-left:110px"></span>' +
                            '<span style="font-weight:bold;">DUST: </span>' + dust[count - 1] + 'ppm' + '<span style="padding-left:110px"></span>' +
                            '<span style="font-weight:bold;">TEMP: </span>' + temp[count - 1] + '°C' + '<span style="padding-left:110px"></span>' +
                            '<span style="font-weight:bold;">GAS: </span>' + gas[count - 1] + 'ppm' + '<span style="padding-left:110px"></span>' +
                            '<span style="font-weight:bold;">BATTERY: </span>' + bat[count - 1] + '%';

                        console.log(xaxis[0]);
                        var date = [];
                        for (var i = 0; i < count; i++) {

                            if (i == 0) {
                                date.push(xaxis[i]);

                            } else {
                                var long = date.length;
                                var lastelement = date[long - 1];
                                var ngay = lastelement.getDate();
                                var thang = lastelement.getMonth();
                                if (xaxis[i].getDate() != ngay || xaxis[i].getMonth() != thang) {
                                    date.push(xaxis[i]);
                                }
                            }
                        }


                        console.log(date);
                        removeOptions(document.getElementById("date"));
                        createDateOptions(date, co, dust, temp, gas, bat, xaxis);
                        // drowchart();
                    }
                });
                // Get node info
                $.ajax({
                    type: "GET",
                    url: "/node/getinfo?id=" + node_id,
                    dataType: "json",
                    success: function(data) {
                        Nodeinfo = data;
                        InsertInfo(Nodeinfo.node_id, Nodeinfo.phone, Nodeinfo.location.lat, Nodeinfo.location.lng);
                        console.log(Nodeinfo.location.lat);
                        initMap(Nodeinfo.location.lat, Nodeinfo.location.lng, Nodeinfo.node_id);

                    }
                });
                socket.off('rdata');
                socket.on('rdata', function(updateData) {
                    console.log(data_id, '==', updateData.new_val.data_id);
                    if (data_id === updateData.new_val.data_id) {
                        console.log('get data', updateData.new_val.data);
                        co1.push(Number(updateData.new_val.data.co));
                        dust1.push(Number(updateData.new_val.data.dust));
                        temp1.push(Number(updateData.new_val.data.temp));
                        gas1.push(Number(updateData.new_val.data.gas));
                        bat1.push(Number(updateData.new_val.data.bat));
                        x.push(updateData.new_val.time);
                        drowchart(x, co1, dust1, gas1, temp1, bat1);
                    }
                });


                //Display node info
                function InsertInfo(nodeid, phone, lat, lng) {
                    document.getElementById("NodeID").value = nodeid;
                    document.getElementById('NodeID').disabled = true;
                    document.getElementById("Phone").value = phone;
                    document.getElementById('Phone').disabled = true;
                    document.getElementById("Latitude").value = lat;
                    document.getElementById('Latitude').disabled = true;
                    document.getElementById("Longitude").value = lng;
                    document.getElementById('Longitude').disabled = true;
                }

                // create google map thumbnail

                //Drawchart function

            }

        }


        //--------------------------------------
    </script>
    <style type="text/css">
        select option {
            background: rgba(0, 0, 0, 0.3);
            color: #fff;
            text-shadow: 0 1px 0 rgba(0, 0, 0, 0.4);
        }

        select {
            background: rgba(0, 0, 0, 0.3);
            color: #fff;
            text-shadow: 0 1px 0 rgba(0, 0, 0, 0.4);
        }
    </style>

    <script src="js/highcharts.js"></script>
    <script src="js/exporting.js"></script>
    <link rel="stylesheet" href="css/styleGraph.css">
    <!--  <script type="text/javascript">
    </script> -->

    <div class="box123">
        <div class="top">
            <div class="contentleft">
                <div class="left">NodeId:</div>
                <div class="id_100">
                    <select name="sources" id="sources">
                        <option value="">Chose Node ID</option>
                    </select>
                </div>
                <input style="width: 200px; height: 30px; margin-left: 20px" id="chooseNode"></input>
                <button class="btn-danger" style="height: 30px; width: 50px" onclick="NodeInput()">Ok</button>
            </div>
            <div style="clear: both;"></div>
            <div class="contentleft">
                <div class="left">Date:</div>
                <div class="id_100">
                    <select name="date" id="date">
                        <option value="">Chose Date</option>
                    </select>
                </div>
            </div>
            <button style="float: right; height: 30px;width: 50px; margin-right: 20%; display: none" class="btn-danger" id="editbutton1" onclick="EditConfirm()"><i class="fa fa-check-square" aria-hidden="true" style="font-size: 170%; color:black"></i></button>
            <button style="float: right; height: 30px;width: 50px; margin-right: 15px;  display: none;" id="editbutton2" class="btn-success" onclick="EditNode()"><i class="fa fa-cog" aria-hidden="true" style="font-size: 170%; color:black"></i></button>
            <!-- Realtime already and need refresh? ever tried look at the code? -->
            <div style="clear: both;"> 
                <button class="btn-danger" style="height: 30px;width: 50px; margin-left: 10%;" onclick="doRefresh()"><i class="fa fa-refresh" aria-hidden="true" style="font-size: 170%; color:black"></i></button>
            </div>
        </div>

        <div class="bot" style="clear: both;">
            <div class="">
                <!-- <p style="color: red">Node Info: </p> -->
                <table class="table table-striped table-bordered table-hover table-condensed">
                    <tbody>
                        <tr>
                            <td style="font-weight: bold;"> Node ID</td>
                            <td>
                                <input id="NodeID" style="width: 100%; border: 0; background-color: white;"></input>
                            </td>
                        </tr>
                        <tr>
                            <td style="font-weight: bold;"> Latitude </td>
                            <td>
                                <input id="Latitude" style="width: 100%; border: 0"></input>
                            </td>
                        </tr>
                        <tr>
                            <td style="font-weight: bold;">Longitude </td>
                            <td>
                                <input id="Longitude" style="width: 100%; background-color: white; border: 0"></input>
                            </td>
                        </tr>
                        <tr>
                            <td style="font-weight: bold;">Phone Number </td>
                            <td>
                                <input id="Phone" style="width: 100%;border:0"></input>
                            </td>
                        </tr>
                        <tr>
                            <td style="font-weight: bold;">Latest Update </td>
                            <td id="update"></td>
                        </tr>
                    </tbody>
                    <!-- <span id="NodeInfomation"></span> -->
                </table>
            </div>
            <div id="chart" class="bright" style="float: left;width: 900px"></div>
            <div id="map" style="float: right; width: 290px;height: 390px; margin:5px auto;"></div>
        </div>
    </div>

    <script src="js/Graph.js"></script>
    <script src="js/Graph1.js"></script>
